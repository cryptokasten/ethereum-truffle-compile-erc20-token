#+TITLE: Ethereum truffle compile ERC20 token
#+PROPERTY: header-args:sh :session *shell ethereum-truffle-compile-erc20-token sh* :results silent raw
#+OPTIONS: ^:nil

** System environment

- CentOS Linux release 8.1.1911 (Core)

- Node v10.19.0

Node Modules:

- Truffle v5.1.30 (core: 5.1.30)

- Solidity - 0.5.4 (solc-js)

- Node v10.19.0

- Web3.js v1.2.1

- openzeppelin-solidity@2.2.0

** Truffle install

#+BEGIN_SRC sh
sudo npm install -g truffle
#+END_SRC

** Openzeppelin install

#+BEGIN_SRC sh
npm install openzeppelin-solidity@2.2.0
#+END_SRC

** Build

#+BEGIN_SRC sh
truffle build
#+END_SRC

** Token code

Main contract code =src/contracts/CryptoCoin.sol=.

Change =name=, =symbol=, =decimals= and =INITIAL_SUPPLY=.

#+BEGIN_SRC js :tangle src/contracts/CryptoCoin.sol
pragma solidity ^0.5.2;

import "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol";

contract CryptCoin is ERC20 {
    string public name = "TestToken";
    string public symbol = "TTT";
    uint8 public decimals = 6;
    uint public INITIAL_SUPPLY = 1000000000000;

    constructor() public {
	_mint(msg.sender, INITIAL_SUPPLY);
    }
}
#+END_SRC

** Truffle config

#+BEGIN_SRC js :tangle src/truffle-config.js
module.exports = {
    // Uncommenting the defaults below
    // provides for an easier quick-start with Ganache.
    // You can also follow this format for other networks;
    // see <http://truffleframework.com/docs/advanced/configuration>
    // for more details on how to specify configuration options!

    networks: {
	development: {
	    host: "127.0.0.1",
	    port: 18545,
	    network_id: "*"
	},
	test: {
	    host: "127.0.0.1",
	    port: 8545,
	    network_id: "*",
	    from: "<from address>"
	}
    },

    compilers: {
	solc: {
	    version: "0.5.4"
	}
    }
};
#+END_SRC

